# vim ft=yaml
# CI on Windows via appveyor
# Largely from:
# https://github.com/ogrisel/python-appveyor-demo/blob/master/appveyor.yml
#
# Builds version specified in BUILD_COMMIT variable
# To chose version to build, edit value of BUILD_COMMIT

os: Visual Studio 2015

environment:
    global:
      # Remember to edit .travis.yml too
      BUILD_COMMIT: v1.3.1rel
      WHEELHOUSE_UPLOADER_USERNAME: travis-worker
      # Encrypted to matthew.brett+unidata account.
      WHEELHOUSE_UPLOADER_SECRET:
          secure: H46gyfPdKSfXRfADNnvwJRfqX9vyHoeM16shc19GdWQLMHLl8CADY60SBnNm4fjE

    matrix:
    - PYTHON: C:\Python39
      NP_BUILD_DEP: "1.19.4"
      NP_TEST_DEP: "1.19.4"
    - PYTHON: C:\Python39-x64
      NP_BUILD_DEP: "1.19.4"
      NP_TEST_DEP: "1.19.4"
    - PYTHON: C:\Python38
      NP_BUILD_DEP: "1.17.3"
      NP_TEST_DEP: "1.17.3"
    - PYTHON: C:\Python38-x64
      NP_BUILD_DEP: "1.17.3"
      NP_TEST_DEP: "1.17.3"
    - PYTHON: C:\Python37
      NP_BUILD_DEP: "1.14.5"
      NP_TEST_DEP: "1.14.5"
    - PYTHON: C:\Python37-x64
      NP_BUILD_DEP: "1.14.5"
      NP_TEST_DEP: "1.14.5"
    - PYTHON: C:\Python36
    - PYTHON: C:\Python36-x64
    #- PYTHON: C:\Python35
    #- PYTHON: C:\Python35-x64
    #- PYTHON: C:\Python27
    #- PYTHON: C:\Python27-x64

install:
  - cmd: echo "Filesystem root:"
  - dir C:\

  - echo "Installed SDKs:"
  - dir "C:/Program Files/Microsoft SDKs/Windows"

  # Get needed submodules
  - git submodule update --init
  
  # Install new Python if necessary
  - ps: .\multibuild\install_python.ps1

  # Prepend newly installed Python to the PATH of this build (this cannot be
  # done from inside the powershell script as it would require to restart
  # the parent CMD process).
  - SET PATH=%PYTHON%;%PYTHON%\\Scripts;%PATH%

  # Fix MSVC builds for 64-bit Python
  # See
  # http://stackoverflow.com/questions/32091593/cannot-install-windows-sdk-7-1-on-windows-10
  - echo "C:\Program Files\Microsoft SDKs\Windows\v7.1\Bin\SetEnv.cmd" /x64 > "C:\Program Files (x86)\Microsoft Visual Studio 10.0\VC\bin\amd64/vcvars64.bat"

  # Check that we have the expected version and architecture for Python
  - python --version
  - python -c "import struct; print(struct.calcsize('P') * 8)"

  # Upgrade to the latest pip, setuptools, and wheel
  - python -m pip install --upgrade pip
  # Pin wheel to 0.26 to avoid Windows ABI tag for built wheel
  - pip install wheel==0.26

  - git submodule update --init
  # Dependencies for package
  - pip install Cython
  - pip install numpy

build_script:
  # Build and install the wheel
  - cd cftime
  - git fetch origin
  - git checkout %BUILD_COMMIT%
  - python setup.py bdist_wheel
  - ps: |
      # Upload artifact to Appveyor immediately after build
      ls dist -r | Foreach-Object {
          appveyor PushArtifact $_.FullName
          pip install $_.FullName
      }
  - cd dist
  - pip install --pre --no-index -f . cftime
  - cd ..

test_script:
  # Run some tests
  - mkdir tmp
  - cd tmp
  - pip install pytest pytest-cov
  - pytest -v ../test/test_cftime.py
  - cd ..

after_test:
  # If tests are successful, create binary packages for the project.
  - dir dist

#on_success:
#  # Upload the generated wheel package to Rackspace
#  # On Windows, Apache Libcloud cannot find a standard CA cert bundle so we
#  # disable the ssl checks.
#  - pip install wheelhouse-uploader
#  - python -m wheelhouse_uploader upload
#    --local-folder=dist --no-update-index
#    wheels
 
# upload to github
artifacts:
  - path: cftime\dist\*.whl
deploy:
  - provider: GitHub
    description: "cftime release"
    auth_token:
      secure: hjJNKldisMmyQSiKXHMbEsXgYVr9lNDI3es4qvhYskBq+BDXcCpjL4oDwT3KXykn
    force_update: true
    on:
      APPVEYOR_REPO_TAG: true 
